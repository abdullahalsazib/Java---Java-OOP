class Animal {
    String Name;

    Animal(String name) {
        this.Name = name;
    }

    void display() {
        System.out.println("That is my animal.. " + Name);
    }

    void makeSound() { // ‚úÖ "nakeSound()" -> "makeSound()" ‡¶†‡¶ø‡¶ï ‡¶ï‡¶∞‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá
        System.out.println("Some sound...");
    }
}

// üê∂ Dog Class (Method Overriding)
class Dog extends Animal {
    Dog(String Name) {
        super(Name);
    }

    @Override // override
    void makeSound() { // ‚úÖ Method Overriding
        System.out.println("Woof Woof Woof");
    }
}

// üê¶ Bird Class (Method Overriding)
class Bird extends Animal {
    Bird(String Name) {
        super(Name);
    }

    @Override // override
    void makeSound() { // ‚úÖ Method Overriding
        System.out.println("Pue Pue");
    }
}

// üéØ Polymorphism in Action!
public class App {
    public static void main(String[] args) {
        System.out.println("Hello, world");

        // ‚úÖ Parent class reference ‡¶¶‡¶ø‡ßü‡ßá Child class ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡¶õ‡¶ø (Polymorphism)
        Animal myAnimal1 = new Dog("Kutub.");
        Animal myAnimal2 = new Bird("Moyna.");

        myAnimal1.display();
        myAnimal1.makeSound(); // üê∂ Dog class-‡¶è‡¶∞ makeSound() ‡¶∞‡¶æ‡¶® ‡¶ï‡¶∞‡¶¨‡ßá

        myAnimal2.display();
        myAnimal2.makeSound(); // üê¶ Bird class-‡¶è‡¶∞ makeSound() ‡¶∞‡¶æ‡¶® ‡¶ï‡¶∞‡¶¨‡ßá
    }
}
